version: "3"
services:
  db:
    image: postgres:10
    container_name: pg_db
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/resources/ddl.sql

  zoo:
    image: zookeeper:3.4.9
    container_name: zookeeper
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo/data:/data
      - ./zk-single-kafka-single/zoo/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo

  connect:
    image: debezium/connect
    container_name: debezium
    ports:
     - 8083:8083
     - 5005:5005
    links:
     - kafka
     - db
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
